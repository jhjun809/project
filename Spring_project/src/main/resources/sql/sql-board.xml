<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bitc.mapper.BoardMapper">

	<!--일반 회원 글 목록 읽기-->
	<select id="selectBoardList" resultType="com.bitc.dto.BoardDto">
		<![CDATA[ 
			SELECT 
				board_idx, title, contents, creator_id, created_dt, hit_cnt 
			FROM 
				board 
			WHERE 
				deleted_yn = 'N'
			ORDER BY board_idx DESC
		]]>
	</select>

	<!--관리자 글 목록 읽기-->
	<select id="selectNoticeList" resultType="com.bitc.dto.NoticeDto">
		<![CDATA[ 
			SELECT 
				notice_idx, title, contents, creator_id, created_dt, hit_cnt 
			FROM 
				notice 
			WHERE 
				deleted_yn = 'N'
			ORDER BY notice_idx ASC
		]]>
	</select>

	<!--자유게시판 글 작성하기-->
	<insert id="insertBoard" parameterType="com.bitc.dto.BoardDto" useGeneratedKeys="true" keyProperty="boardIdx">
		<![CDATA[ 
			INSERT INTO board 
				(title, contents, creator_id, created_dt)
			VALUES 
				(#{title}, #{contents}, #{creatorId}, NOW())
		]]>
	</insert>
	
	<!--공지 글 작성하기-->
	<insert id="insertNotice" parameterType="com.bitc.dto.NoticeDto" useGeneratedKeys="true" keyProperty="noticeIdx">
		<![CDATA[ 
			INSERT INTO notice 
				(notice_idx, title, contents, creator_id, created_dt)
			VALUES 
				(#{noticeIdx}, #{title}, #{contents}, '관리자', NOW())
		]]>
	</insert>

	<!--자유게시판 글 하나 확인하기-->
	<select id="selectBoardDetail" resultType="com.bitc.dto.BoardDto">
		<![CDATA[ 
			SELECT 
		board_idx, title, contents, creator_id, created_dt, hit_cnt 
			FROM 
		board 
			WHERE board_idx = #{boardIdx} 
		AND deleted_yn = 'N';
	]]>
	</select>
	
	<!--공지 글 하나 확인하기-->
	<select id="selectNoticeDetail" resultType="com.bitc.dto.NoticeDto">
		<![CDATA[ 
			SELECT 
			notice_idx, title, contents, creator_id, created_dt, hit_cnt 
			FROM 
		notice 
			WHERE notice_idx = #{noticeIdx} 
		AND deleted_yn = 'N';
	]]>
	</select>

	<!--자유게시판 글 삭제하기-->
	<update id="deleteBoard" parameterType="int">
		<![CDATA[ 
			UPDATE 
				board 
			SET 
				deleted_yn ='Y' 
			WHERE 
				board_idx=#{boardIdx}
		]]>
	</update>
	
	<!--공지 글 삭제하기-->
	<update id="deleteNotice" parameterType="int">
		<![CDATA[ 
			UPDATE 
				notice 
			SET 
				deleted_yn ='Y' 
			WHERE 
				notice_idx=#{noticeIdx}
		]]>
	</update>

	<!--자유게시판 글 수정하기-->
	<update id="updateBoard" parameterType="com.bitc.dto.BoardDto">
		<![CDATA[ 
  			UPDATE 
  			 	board
		 	SET 
		 		title = #{title}, contents=#{contents}, creator_id=#{creatorId}, updated_dt= NOW()
			WHERE 
				board_idx = #{boardIdx};     
		]]>
	</update>

	<!--공지 글 수정하기-->
	<update id="updateNotice" parameterType="com.bitc.dto.NoticeDto">
		<![CDATA[ 
  			UPDATE 
  			 	notice
		 	SET 
		 		title = #{title}, contents=#{contents}, creator_id=#{creatorId}, updated_dt= NOW()
			WHERE 
				notice_idx = #{noticeIdx};     
		]]>
	</update>

	<!--일반:조회수 올리기-->
	<update id="updateFreeHitCnt" parameterType="int">
		<![CDATA[
			UPDATE
				board
			SET
				hit_cnt = hit_cnt + 1
			WHERE
				board_idx = #{boardIdx}  
			AND
				deleted_yn = 'N'
		]]>
	</update>

	<!--공지:조회수 올리기-->
	<update id="updateNoticeHitCnt" parameterType="int">
		<![CDATA[
			UPDATE
				notice
			SET
				hit_cnt = hit_cnt + 1
			WHERE
				notice_idx = #{noticeIdx}  
			AND
				deleted_yn = 'N'
		]]>
	</update>	
	
		<!--조회수 높은 글 순서대로 살펴보기-->
	<select id="hitCntDesc" parameterType="int" resultType="com.bitc.dto.BoardDto" >
		<![CDATA[ 
			SELECT 
				board_idx, title, creator_id, hit_cnt 
			FROM 
				board 
			WHERE 
				deleted_yn = 'N'

			ORDER BY hit_cnt DESC
		]]>
	</select>

	<!--자유 파일 올리기-->
	<insert id="insertBoardFileList" parameterType="com.bitc.dto.FileDto" useGeneratedKeys="true" keyProperty="boardIdx">
		<![CDATA[
			INSERT INTO file
				(board_idx, original_file_name, stored_file_path, file_size, creator_id, created_date)
			VALUES
		]]>
		<foreach collection="list" item="item" separator=",">
			(#{item.boardIdx},
			#{item.originalFileName},
			#{item.storedFilePath},
			#{item.fileSize},
			'첨부파일',
			NOW())
		</foreach>
	</insert>
	
	<!--공지 파일 올리기-->
	<insert id="insertNoticeFileList" parameterType="com.bitc.dto.FileDto" useGeneratedKeys="true" keyProperty="noticeIdx">
		<![CDATA[
			INSERT INTO file
				(notice_idx, original_file_name, stored_file_path, file_size, creator_id, created_date)
			VALUES
		]]>
		<foreach collection="list" item="item" separator=",">
			(#{item.noticeIdx},
			#{item.originalFileName},
			#{item.storedFilePath},
			#{item.fileSize},
			'첨부파일',
			NOW())
		</foreach>
	</insert>
	
	<!--자유파일 보기-->
	<select id="selectBoardFileList" parameterType="int" resultType="com.bitc.dto.FileDto" >
		<![CDATA[
			SELECT
				file_idx, board_idx, original_file_name, stored_file_path,
				FORMAT(ROUND(file_size / 1024), 0) AS file_size
			FROM
				file
			WHERE
				board_idx = #{fileIdx}
			AND
				deleted_yn = 'N'
		]]>
	</select>
	<!--공지 파일 보기-->
	<select id="selectNoticeFileList" parameterType="int" resultType="com.bitc.dto.FileDto">
		<![CDATA[
			SELECT
				file_idx, notice_idx, original_file_name, stored_file_path,
				FORMAT(ROUND(file_size / 1024), 0) AS file_size
			FROM
				file
			WHERE
				notice_idx = #{fileIdx}
			AND
				deleted_yn = 'N'
		]]>
	</select>
	
	<!--자유게시판파일-->
	<select id="selectBoardFileInfo" parameterType="map" resultType="com.bitc.dto.FileDto">
		<![CDATA[ 
			SELECT 
				original_file_name, stored_file_path, file_size
			FROM 
				file
			WHERE 
				file_idx = #{fileIdx}
			AND 
				board_idx = #{boardIdx}
			AND 
				deleted_yn ='N';
		]]>

	</select>
	<!--공지게시판파일-->
		<select id="selectNoticeFileInfo" parameterType="map" resultType="com.bitc.dto.FileDto">
		<![CDATA[ 
			SELECT 
				original_file_name, stored_file_path, file_size
			FROM 
				file
			WHERE 
				file_idx = #{fileIdx}
			AND 
				notice_idx = #{noticeIdx}
			AND 
				deleted_yn ='N';
		]]>

	</select>
	
		<!--공지 댓글 작성하기-->
	<insert id="noticeComment" parameterType="com.bitc.dto.CommentDto" >
		<![CDATA[ 
			INSERT INTO comment 
				( no_comment, creator_id)
			VALUES 
				(#{noComment}, #{creatorId})
		]]>
	</insert>
	
	<select id="commentList" resultType="com.bitc.dto.CommentDto">
	<![CDATA[ 
		SELECT 
			comment_idx, no_comment , creator_id
		FROM 
			comment
		WHERE no_comment != "null"
		
	]]>
	
	</select>
	
			<!--자유 댓글 작성하기-->
	<insert id="freeComment" parameterType="com.bitc.dto.CommentDto" >
		<![CDATA[ 
			INSERT INTO comment 
				( free_comment, creator_id)
			VALUES 
				(#{freeComment}, #{creatorId})
		]]>
	</insert>
	
	<select id="commentfreeList" resultType="com.bitc.dto.CommentDto">
	<![CDATA[ 
		SELECT 
			comment_idx, free_comment , creator_id
		FROM 
			comment
		WHERE free_comment != "null"
		
	]]>
	
	</select>
	
	<delete id="deleteNComment">
	<![CDATA[ 
	delete from 
		comment 
	where comment_idx =#{commentIdx};
	]]>
	</delete>
	
	
		<delete id="deleteFComment">
	<![CDATA[ 
	delete from 
		comment 
	where comment_idx =#{commentIdx};
	]]>
	</delete>
	
	
</mapper>